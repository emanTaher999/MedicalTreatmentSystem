@model MedicalTreatment.Models.MEDICALCLAIMFORM
@using MedicalTreatment.Models
@using MedicalTreatment.Controllers

@{
    
    ViewBag.Title = "Create";
    var message = TempData["AlertMessage"] ?? string.Empty;
   var Year = 2022;
   var x = ViewData["ENTITLEMENTPERCENT"];
}
<h2 class="btn btn-outline-dark d-flex justify-content-center">أستمارة طلب منصرفات علاجية</h2>
<br />

@using (Html.BeginForm("Create", "MedicalClaimForm", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row my-2">
        <div  class="col-md-3">
            @Html.LabelFor(model => model.INDIVIDUALID, "أسم الموظف")
            @*getStructure();*@
            <div>
                @Html.DropDownListFor(model => model.INDIVIDUALID, ViewBag.INDIVIDUALID as SelectList, "---أختر---", new { @class = "form-control", @id = "INDIVIDUALID", onchange = "GETConsumerCeiling();GETResidualCeiling();getStructure();" })
                @Html.ValidationMessageFor(model => model.INDIVIDUALID)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.MAINORGANISATIONID, "أسم المجموعة")

            <div>
                @Html.DropDownList("MAINORGANISATIONID",ViewBag.MAINORGANISATIONID as SelectList, "---أختر---", new { @class = "form-control", @id = "MAINORGANISATIONID" , @readonly = "readonly"})
                @Html.ValidationMessageFor(model => model.MAINORGANISATIONID)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.ORGANISATIONID, "أسم الشركة")

            <div>
                @Html.DropDownList("ORGANISATIONID", ViewBag.ORGANISATIONID as SelectList, "---أختر---", new { @class = "form-control", @id = "ORGANISATIONID", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ORGANISATIONID)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.DEPARTMENTID, "أسم الأدارة")

            <div>
                @Html.DropDownList("DEPARTMENTID", ViewBag.DEPARTMENTID as SelectList, "---أختر---", new { @class = "form-control", @id = "DEPARTMENTID", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.DEPARTMENTID)
            </div>
        </div>
    </div>

    <div class="row my-2">
        <div  class="col-md-3">
            @Html.LabelFor(model => model.SECTIONID, "أسم القسم")

            <div>
                @Html.DropDownList("SECTIONID", ViewBag.SECTIONID as SelectList, "---أختر---", new { @class = "form-control", @id = "SECTIONID", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.SECTIONID)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.PATIENTEMPLOYEE, "المريض الموظف ؟")

            <div>
                @Html.DropDownListFor(model => model.PATIENTEMPLOYEE, ViewBag.PATIENTEMPLOYEE as SelectList, "---أختر---", new { @class = "form-control", @id = "PATIENTEMPLOYEE", onchange = "getPATIENTID(this.id);" })
                @Html.ValidationMessageFor(model => model.PATIENTEMPLOYEE)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.PATIENTID, "أسم المريض")

            <div>
                @Html.DropDownListFor(model => model.PATIENTID, ViewBag.PATIENTID as SelectList, "---أختر---", new { @class = "form-control", @id = "PATIENTID" })

                @Html.ValidationMessageFor(model => model.PATIENTID)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.MEDICALSERVICEID, "أسم الخدمة الطبية")

            <div>
                @Html.DropDownList("MEDICALSERVICEID", ViewBag.MEDICALSERVICEID as SelectList, "---أختر---", new { @class = "form-control", @id = "MEDICALSERVICEID", @onchange = "checkMedicalService();" })
                @Html.Label("الخدمة غير مسموحة لأسرة الموظف", new {@class = "text-danger", @id = "errMsgAr", @hidden = "hidden", @style = "color:red" })
                @Html.Label("نوع الخدمة لا ينطبق على جنس المريض", new { @id = "errMsgAr2", @hidden = "hidden", @style = "color:red" })


                @Html.ValidationMessageFor(model => model.MEDICALSERVICEID)
            </div>
        </div>

    </div>
     
    <div class="row my-2">
        <div  class="col-md-3">
            @Html.Hidden("Year", new { @Value = Year, @id = "Year" })

            @Html.Label("مبلغ السقف المستهلك")

            <div>
                @Html.TextBox("ConsumerCeiling", "", new { @class = "form-control", @id = "ConsumerCeiling" })
                @Html.ValidationMessageFor(model => model.MEDICALDETAILSERVICEID)
            </div>
        </div>
        <div class="col-md-3">
            @Html.Label("مبلغ السقف المتبقي")

            <div>
                @Html.TextBox("ResidualCeiling", "", new { @class = "form-control", @id = "ResidualCeiling" })
                @Html.ValidationMessageFor(model => model.MEDICALDETAILSERVICEID)
            </div>
        </div>
        <div class="col-md-3">
            @Html.Label("السنة العلاجية")

            <div>
                @Html.DropDownList("Years", ViewBag.Years as SelectList, "---أختر---", new { @class = "form-control", @id = "Years" })
            
            </div>
        </div>
        <div class="col-md-3">
            @Html.Label("مجموع مبالغ الإستحقاق")

            <div>
                @Html.TextBox("SumTotal", "", new { @class = "form-control", @id = "SumTotal", @readonly = "readonly" })


            </div>
        </div>
        </div>
    <div class="row my-2">
        <div  class="col-md-3">
            @Html.LabelFor(model => model.MEDICALDETAILSERVICEID, "بيان الخدمة الطبية")

            <div>
                @Html.DropDownList("MEDICALDETAILSERVICEID", ViewBag.MEDICALDETAILSERVICEID as SelectList, "---أختر---", new { @class = "form-control", @id = "MEDICALDETAILSERVICEID" })
                @Html.ValidationMessageFor(model => model.MEDICALDETAILSERVICEID)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.SICKLEAVESTARTDATE, "تاريخ بداية الأجازة المرضية")

            <div>
                @Html.TextBoxFor(model => model.SICKLEAVESTARTDATE, new { @class = "form-control", @type = "Date" })
                @Html.ValidationMessageFor(model => model.SICKLEAVESTARTDATE)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.SICKLEAVEENDDATE, "نهاية بداية الأجازة المرضية")

            <div>
                @Html.TextBoxFor(model => model.SICKLEAVEENDDATE, new { @class = "form-control", @type = "Date" })
                @Html.ValidationMessageFor(model => model.SICKLEAVEENDDATE)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.CLAIMDATE, "تاريخ تقديم الطلب")

            <div>
                @Html.TextBoxFor(model => model.CLAIMDATE, new { @class = "form-control", @type = "Date" })
                @Html.ValidationMessageFor(model => model.CLAIMDATE)
            </div>
        </div>

        </div>

    <div class="row my-2">
        <div  class="col-md-3">
            @Html.LabelFor(model => model.EMPLOYEESERVICEUNITDATE, "تاريخ توقيع الوحدة الخدمية للموظف")

            <div>
                @Html.TextBoxFor(model => model.EMPLOYEESERVICEUNITDATE, new { @class = "form-control", @type = "Date" })
                @Html.ValidationMessageFor(model => model.EMPLOYEESERVICEUNITDATE)
            </div>
        </div>
        
        <div  class="col-md-3">
            @Html.LabelFor(model => model.APPROVEDDATE, "تاريخ التصديق")

            <div>
                @Html.TextBoxFor(model => model.APPROVEDDATE, new { @class = "form-control", @type = "Date" })
                @Html.ValidationMessageFor(model => model.APPROVEDDATE)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.TOTALCLAIMAMOUNT, "جملة مبلغ العلاج")

            <div>
                @Html.TextBoxFor(model => model.TOTALCLAIMAMOUNT, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.TOTALCLAIMAMOUNT)
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.ENTITLEMENTAMOUNT, "المبلغ المستحق")

            <div>
                @Html.TextBoxFor(model => model.ENTITLEMENTAMOUNT, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ENTITLEMENTAMOUNT)
            </div>
        </div>
    </div>
    <div class="row my-2">
        
        <div  class="col-md-3">
            @Html.LabelFor(model => model.APPROVEDAMOUNT, "المبلغ المصدق")

            <div>
                @Html.TextBoxFor(model => model.APPROVEDAMOUNT, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.APPROVEDAMOUNT)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.CLAIMNOTE, "تعليق مقدم الطلب")

            <div>
                @Html.TextBoxFor(model => model.CLAIMNOTE, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CLAIMNOTE)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.EMPLOYEESERVICEUNITNOTE, "تعليق الوحدة الخدمية للموظف")

            <div>
                @Html.TextBoxFor(model => model.EMPLOYEESERVICEUNITNOTE, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EMPLOYEESERVICEUNITNOTE)
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.HUMANRESOURCESNOTE, "تعليق الموارد البشرية")

            <div>
                @Html.TextBoxFor(model => model.HUMANRESOURCESNOTE, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HUMANRESOURCESNOTE)
            </div>
        </div>
    </div>
  <div class="row my-2" >
      <div class="col-md-3">
          @Html.Label("عدد المدخلات")
          @Html.TextBox("Number", "", new { @class = "form-control", @id = "number", onchange = "getpartialDiv(this.value);" })
      </div>
  </div>
    <div class="row">
        <div class="col-lg-12" id="partial">

        </div>
    </div>


        @*<div  class="col-md-3">
            @Html.LabelFor(model => model.STATUS)

            <div>
                @Html.TextBoxFor(model => model.STATUS)
                @Html.ValidationMessageFor(model => model.STATUS)
            </div>
        </div>
        <div  class="col-md-3">
            @Html.LabelFor(model => model.LASTUPDATED)

            <div>
                @Html.TextBoxFor(model => model.LASTUPDATED)
                @Html.ValidationMessageFor(model => model.LASTUPDATED)
            </div>
        </div>*@
    
        <br />
        <div align="center">

            <input type="submit" value="Create" class="btn btn-primary" />

            <a href="/MedicalClaimForm/Index" class="btn btn-outline-info">Back to List</a>
        </div>
}
<script src="~/Content/lib/jquery/dist/jquery.js"></script>
<script src="~/Content/lib/jquery/dist/jquery.min.js"></script>

@*@section Scripts {*@

    @*@Scripts.Render("~/bundles/jqueryval")*@
<script src="~/Scripts2/Common/Common.js"></script>
<script src="~/Scripts2/chosen_v1.6.2/chosen.jquery.js"></script>
<script src="~/Scripts2/chosen_v1.6.2/prism.js"></script>
<link href="~/Scripts2/chosen_v1.6.2/chosen.min.css" rel="stylesheet" />
<link href="~/Scripts2/chosen_v1.6.2/prism.css" rel="stylesheet" />
<script src="~/Scripts2/Common/Common.js"></script>




<script type="text/javascript">

    //(function ($) {
    //    $(document).ready(function () {
    //     debugger
    //     // document.getElementById("model[0].CHEQUEDATE").value = "";
    //     //$("#medICALCLAIMFORMDETAIL").dynamiclist({
    //     //       withEvents: true,

    //     //   });

    //     var length = $("#partial").find("." + "list-item").length;
    //        var i = 0;

    //        while (i < length) {

    //            $("[id = 'model[" + i + "].SERVICEFEESTYPEID']").val("");
    //            $("[id = 'model[" + i + "].AMOUNT']").val("");
    //            $("[id = 'model[" + i + "].UNITID']").val("");
    //            $("[id = 'model[" + i + "].NUMBEROFUNITS']").val("");
    //            $("[id = 'model[" + i + "].TOTALAMOUNT']").val("");
    //            $("[id = 'model[" + i + "].ENTITLEMENTPERCENT']").val("");
    //            $("[id = 'model[" + i + "].ENTITLEMENTAMOUNT']").val("");
    //            i += 1;
    //        }

    //    });
    //})(jQuery);
    function alert2(message, title, buttonText) {

        buttonText = (buttonText == undefined) ? "Ok" : buttonText;
        title = (title == undefined) ? "The page says:" : title;

        var div = $('<div>');
        div.html(message);
        div.attr('title', title);
        div.dialog({
            autoOpen: true,
            modal: true,
            draggable: false,
            resizable: false,
            buttons: [{
                text: buttonText,
                click: function () {
                    $(this).dialog("close");
                    changeStatusToPrint();
                    div.remove();
                }
            }
                ,
                {
                    text: "لا",
                    click: function () {
                        $(this).dialog("close");
                        div.remove();
                        window.location = '@Url.Action("Index")';
                    }
                }
            ]
        });
    }



    function checkMedicalService(){

        
        var _MEDICALSERVICEID = $('#MEDICALSERVICEID').val();
        var _PATIENTEMPLOYEE = $('#PATIENTEMPLOYEE').val();
        var _INDIVIDUALID = $('#INDIVIDUALID').val();

        var input = { MEDICALSERVICEID: _MEDICALSERVICEID, PATIENTEMPLOYEE: _PATIENTEMPLOYEE, INDIVIDUALID: _INDIVIDUALID };

        debugger
        //var output;
        $.ajax({

            url: '/MedicalClaimForm/CheckMedicalService',
            type: "POST",
            data: JSON.stringify(input),
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (data) {
                debugger
                if (data == 'Exist') {
                    $('#errMsgAr').show();
                    alert2("الخدمة غير مسموحة لأسرة الموظف", "تأكيد", "نعم")
                    $('#MEDICALSERVICEID').val = null
                }
                else {
                    $('#errMsgAr').hide();
                }
                if (data == 'Exist2') {
                    alert2("نوع الخدمة لا ينطبق على جنس المريض", "تأكيد", "نعم")
                    $('#errMsgAr2').show();
                }
                else {
                    $('#errMsgAr2').show();
                }

            },

            error: function () {
            }
        });
    }
    //function GETConsumerCeiling() {
    //    var _INDIVIDUALID = $('#INDIVIDUALID').val()
    //  //  var _Year = $('#Year').val()
    //    var input = { INDIVIDUALID: _INDIVIDUALID };
    //    //
    //    //
    //    debugger
    //    $.ajax({
    //        url: '/MedicalClaimForm/getConsumer',
    //        type: "POST",
    //        data: JSON.stringify(input),
    //        dataType: "json",
    //        contentType: "application/json; charset=utf-8",

    //        success: function (data)
    //        {
                
    //            if (data != null) {
    //                $("#ResidualCeiling").val(data.ResidualCeiling);
    //                $("#ConsumerCeiling").val(data.ConsumerCeiling);

    //            }
    //            else {
    //                $("#ResidualCeiling").val(0);
    //                $("#ConsumerCeiling").val(0);
    //            }
    //        },
    //        error: function () {
    //        }
    //    });



    //}
  
    function GETConsumerCeiling() {
        debugger
       
        var _INDIVIDUALID = $('#INDIVIDUALID').val();
        var _Years = $('#Years').val();
        input = { 
            INDIVIDUALID: _INDIVIDUALID,
            Years: _Years
        };
        $.ajax({            
            url: '/MedicalClaimForm/GetConsumerCeiling',
            type: "POST",
            data: JSON.stringify(input),
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (data) {

                if (data != null) {
                    $('#ConsumerCeiling').val(data);
                }
                else {
                    $('#ConsumerCeiling').val(0);
                }
            },
            error: function () {
            }
        });
    }


    function GETResidualCeiling() {
        debugger

        var _INDIVIDUALID = $('#INDIVIDUALID').val();
        input = {
            INDIVIDUALID: _INDIVIDUALID
        };
        $.ajax({
            url: '/MedicalClaimForm/GetResidualCeiling',
            type: "POST",
            data: JSON.stringify(input),
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (data) {

                if (data != null) {
                    $('#ResidualCeiling').val(data);
                }
                else {
                    $('#ResidualCeiling').val(0);
                }
            },
            error: function () {
            }
        });
    }

    function getpartialDiv(){
        debugger
        var childnumber = $('#number').val();
        input = { 'Number': childnumber };
        $.ajax({
            url: '@Url.Action("getpartialDiv", "MedicalClaimForm")',
            type: 'post',
            data: JSON.stringify(input),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                document.getElementById("partial").innerHTML = data;
            },
            error: function (err) {
                console.log("ajax failure (links permisoins): " + err.val());
            }
        });
    }
    

    function getStructure() {
        var _INDIVIDUALID = $('#INDIVIDUALID').val()
        var input = { INDIVIDUALID: _INDIVIDUALID };
        debugger

        $.ajax({

            url: '/MedicalClaimForm/getStruc',
            type: "POST",
            data: JSON.stringify(input),
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (data) {

                $("#MAINORGANISATIONID").val(data.MAINORGANISATIONID);
                $("#ORGANISATIONID").val(data.ORGANISATIONID);
                $("#DEPARTMENTID").val(data.DEPARTMENTID);
                $("#SECTIONID").val(data.SECTIONID);


            },
            error: function () {
            }
        });
    }


    function getPATIENTID(id) {
        debugger
        var PATIENTEMPLOYEE = $('#PATIENTEMPLOYEE').val();
        if (PATIENTEMPLOYEE == "No") {

            var _INDIVIDUALID = $('#INDIVIDUALID').val()
            var input = { INDIVIDUALID: _INDIVIDUALID };
            $('#PATIENTID').prop("readonly", false);
            GetDropDown(input, "/MedicalClaimForm/getSponsors", "PATIENTID", " ", true);

        }
        else if (PATIENTEMPLOYEE == "Yes") {

            var _INDIVIDUALID = $('#INDIVIDUALID').val()
            var input = { INDIVIDUALID: _INDIVIDUALID };
            $('#PATIENTID').prop("readonly", true);
            GetDropDown(input, "/MedicalClaimForm/getEmpName", "PATIENTID", " ", true);

        }
    } 

  
    //function getTOTAL() {
    //    var Amount = $('AMOUNT').val();
    //    var NoUnit = $('NUMBEROFUNITS').val();
    //    var TotalAmount = Amount * NoUnit;
    //    $('TOTALAMOUNT') = TotalAmount;
    //}

    //$(document).ready(function () {
      

    //    });
    function getTOTAL(_this) {
       // alert(_this + "");
        debugger
        var num = _this.name.replace(/^\D+|\D+$/g, "");
        alert(num + " ");
       
        var _AMOUNT = $('#AMOUNT' + num + '').val();
        var _NUMBEROFUNITS = $('#NUMBEROFUNITS' + num + '').val();
        
        var input = { AMOUNT: _AMOUNT, NUMBEROFUNITS: _NUMBEROFUNITS };

        $.ajax({

            url: '/MedicalClaimForm/GetTOTAL',
            type: "POST",
            data: JSON.stringify(input),
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (data) {
                if (data != null) {
                    $('#TOTALAMOUNT' + num + '').val(data);
                   // $('#TOTALAMOUNT').val(data);
                }
                else {
                    $('#TOTALAMOUNT').val("");
                }
            },

            error: function () {
            }
        });
    }

    function GetTotalPer(_this) {
        // alert(_this + "");
        debugger
        var num = _this.name.replace(/^\D+|\D+$/g, "");
        alert(num + " ");

        var _AMOUNT = $('#AMOUNT' + num + '').val();
        var _NUMBEROFUNITS = $('#NUMBEROFUNITS' + num + '').val();

        var input = { AMOUNT: _AMOUNT, NUMBEROFUNITS: _NUMBEROFUNITS };

        $.ajax({

            url: '/MedicalClaimForm/GetTotalPer',
            type: "POST",
            data: JSON.stringify(input),
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (data) {
                if (data != null) {
                    $('#ENTITLEMENTAMOUNT' + num + '').val(data);
                 
                    // $('#TOTALAMOUNT').val(data);
                }
                else {
                    $('#ENTITLEMENTAMOUNT').val("");
                }
            },

            error: function () {
            }
        });
    }
    function GetDropDown(input, url, targetId, defaultValue, withdefaultValue) {
        var target = $('select[name="' + targetId + '"]');
        //var target = $('#' + targetId);
        $.ajax({
            url: url,
            type: "POST",
            traditional: true,
            data: JSON.stringify(input),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                target.empty();
                if (withdefaultValue)
                    target.append("<option value='" + 0 + "'>" + defaultValue + " </option>");
                $(data).each(function () {
                    $(document.createElement('option'))
		    .attr('value', this.Value)
		    .text(this.Text)
		    .appendTo(target);
                });

                return;

            },
            error: function () {
                return;
            }
        });


    }
    var message = '@message';
    if (message)
        alert(message);
</script>

@*}*@