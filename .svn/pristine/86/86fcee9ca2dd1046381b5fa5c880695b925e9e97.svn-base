@model MedicalTreatment.Models.MEDICALDETAILSERVICE

@{
    ViewBag.Title = "Edit";
}

<h2 class="btn btn-outline-dark d-flex justify-content-center">  تفاصيل الخدمات الطبيه</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


<fieldset class="card p-4 shadow">
    <legend class="bg-custom shadow  px-3">تعديل</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.MEDICALSERVICEID, "MEDICALSERVICE")
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.MEDICALSERVICEID, ViewBag.MEDICALSERVICEID as SelectList, "---اختر---", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.MEDICALSERVICEID)
    </div>

    @Html.HiddenFor(model => model.ID)
    <div class="row">
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.NAME)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.NAME)
                @Html.ValidationMessageFor(model => model.NAME)
            </div>
        </div>
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.NAMEEN)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.NAMEEN)
                @Html.ValidationMessageFor(model => model.NAMEEN)
            </div>
        </div>
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.SERVICEINCLUDE)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.SERVICEINCLUDE, new List<SelectListItem>{ new SelectListItem{
              Text="EmployeeOnly",
              Value = "EmployeeOnly"
          },
new SelectListItem{
              Text="EmployeeAndFamily",
              Value = "EmployeeAndFamily"
          }}, "---اختر---", new { @class = "form-control" })
                @Html.ValidationMessage("SERVICEINCLUDE")
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.CEILINGTYPE)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.CEILINGTYPE, new List<SelectListItem>{ new SelectListItem{
              Text="DetailService",
              Value = "DetailService"
          },
new SelectListItem{
              Text="WholeCeiling",
              Value = "WholeCeiling"
          }}, "---اختر---", new { @class = "form-control" })
                @Html.ValidationMessage("CEILINGTYPE")
            </div>
        </div>
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.INPATIENT)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.INPATIENT, new List<SelectListItem>{ new SelectListItem{
             Text="Yes",
             Value = "Yes"
         },
new SelectListItem{
             Text="No",
             Value = "No"
         }}, "---اختر---", new { @class = "form-control" })
                @Html.ValidationMessage("INPATIENT")
            </div>
        </div>
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.OUTPATIENT)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.OUTPATIENT, new List<SelectListItem>{ new SelectListItem{
               Text="Yes",
               Value = "Yes"
           },
  new SelectListItem{
               Text="No",
               Value = "No"
           }}, "---اختر---", new { @class = "form-control" })
                @Html.ValidationMessage("OUTPATIENT")
            </div>
        </div>
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.OUTOFNETWORK)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.OUTOFNETWORK, new List<SelectListItem>{ new SelectListItem{
               Text="Yes",
               Value = "Yes"
           },
  new SelectListItem{
               Text="No",
               Value = "No"
           }}, "---اختر---", new { @class = "form-control" })
                @Html.ValidationMessage("OUTOFNETWORK")
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.PREAPPROVE)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.PREAPPROVE, new List<SelectListItem>{ new SelectListItem{
              Text="Yes",
              Value = "Yes"
          },
 new SelectListItem{
              Text="No",
              Value = "No"
          }}, "---اختر---", new { @class = "form-control" })
                @Html.ValidationMessage("PREAPPROVE")
            </div>
        </div>
    </div>

    <p class="mt-3 col-md-12 ">
        <a href="/MedicalDetailService/Index" class="btn btn-outline-info">عودة للقائمة</a>
        <input type="submit" class="btn btn-success" value="تعديل" />
    </p>
</fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
